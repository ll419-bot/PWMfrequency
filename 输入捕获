0.定义变量 获取捕获的值   ————捕获频率 只需要开一个通道   输入捕获这个地方只需要将psc设置为79

1. 开启定时器中断：
HAL_TIM_IC_Start_IT(&htim2,TIM_CHANNEL_1);
 HAL_TIM_IC_Start_IT(&htim3,TIM_CHANNEL_1);

2.中断回调函数
 void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
if(htim->Instance == TIM2)  //先判断定时器
{
cap1 = HAL_TIM_ReadCapturedValue(&htim3,TIM_CHANNEL_1);   //获取捕获寄存器的值
        TIM2->CNT = 0;
		 R40_frq = 80000000/80/cap1;   //这个cap1就是ccr
		 HAL_TIM_IC_Start_IT(&htim2,TIM_CHANNEL_1);       //计算之后 还要再开启一次中断 让下一次也可以进来
}

捕获占空比 需要两个通道
0.定义变量 捕获下降沿     uint32_t cap1_2, cap2_2, duty1, duty2 ;
1.在之前的代码里面加上：
HAL_TIM_IC_Start_IT(&htim2,TIM_CHANNEL_2);
 HAL_TIM_IC_Start_IT(&htim3,TIM_CHANNEL_2);

if(htim->Channel==HAL_TIM_ACTIVE_CHANNEL_1)     //因为有两个通道 使用不仅要判断定时器 还要判断通道
		cap1 = HAL_TIM_ReadCapturedValue(&htim3,TIM_CHANNEL_1);
		 cap1_2 =  HAL_TIM_ReadCapturedValue(&htim3,TIM_CHANNEL_2);
		 TIM2->CNT = 0;
		 R40_frq = 80000000/80/cap1;   
			 R40_duty = (1.0*cap1_2)/(1.0*cap1)*100;  通过输入捕获计算占空比 需要捕获上升沿和下降沿  *这个1.0是为了用于浮点计算 *100是为了计算百分数
		 HAL_TIM_IC_Start_IT(&htim2,TIM_CHANNEL_1);
			  HAL_TIM_IC_Start_IT(&htim2,TIM_CHANNEL_1);






